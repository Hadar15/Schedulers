import React from 'react';
import { Event } from '../types';

interface EventBlockProps {
  event: Event;
  onEdit: (event: Event) => void;
  currentTimeSlot: string;
}

const EventBlock: React.FC<EventBlockProps> = ({
  event,
  onEdit,
  currentTimeSlot,
}) => {
  const handleClick = (e: React.MouseEvent) => {
    e.stopPropagation();
    onEdit(event);
  };

  const startHour = parseInt(event.startTime.split(':')[0]);
  const currentHour = parseInt(currentTimeSlot.split(':')[0]);
  const endHour = parseInt(event.endTime.split(':')[0]);
  const duration = endHour - startHour;
  const height = `${duration * 4}rem`; // 4rem per hour

  // Only render if this is the start hour for this event
  if (currentHour !== startHour) {
    return null;
  }

  const getColorClasses = (color: string) => {
    switch (color) {
      case 'blue':
        return {
          bg: 'bg-blue-100',
          border: 'border-blue-300',
          text: 'text-blue-800'
        };
      case 'green':
        return {
          bg: 'bg-green-100',
          border: 'border-green-300',
          text: 'text-green-800'
        };
      case 'red':
        return {
          bg: 'bg-red-100',
          border: 'border-red-300',
          text: 'text-red-800'
        };
      default:
        return {
          bg: 'bg-gray-100',
          border: 'border-gray-300',
          text: 'text-gray-800'
        };
    }
  };

  const colorClasses = getColorClasses(event.color);

  return (
    <div
      className={`absolute inset-x-0 rounded-md shadow-sm border transition-colors duration-200 cursor-pointer hover:shadow-md ${
        colorClasses.bg
      } ${colorClasses.border}`}
      style={{ height }}
      onClick={handleClick}
    >
      <div className="p-2 h-full overflow-hidden">
        <div className={`font-semibold text-sm leading-tight ${colorClasses.text}`}>
          {event.title}
        </div>
        <div className={`text-xs mt-1 opacity-75 ${colorClasses.text}`}>
          {event.startTime} - {event.endTime}
        </div>
        {event.description && (
          <div className={`text-xs mt-1 opacity-60 ${colorClasses.text} line-clamp-2`}>
            {event.description}
          </div>
        )}
      </div>
    </div>
  );
};

export default EventBlock;
